// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot.commands;

import frc.robot.subsystems.Drivebase;
import edu.wpi.first.wpilibj2.command.CommandBase;
import edu.wpi.first.math.controller.PIDController;
import com.kauailabs.navx.frc.AHRS;


/** An example command that uses an example subsystem. */
public class PIDBalance extends CommandBase {
  @SuppressWarnings({"PMD.UnusedPrivateField", "PMD.SingularField"})
  private final Drivebase m_subsystem;
  private int m_distance;
  private boolean isDeteched;
  AHRS m_AHRS = new AHRS();
  
  PIDController m_PIDController = new PIDController(0,0,0);

  

  /**
   * Creates a new ExampleCommand.
   *
   * @param subsystem The subsystem used by this command.
   */
  public PIDBalance(Drivebase subsystem, int distance) {
    m_distance = distance
    m_subsystem = subsystem;
    // Use addRequirements() here to declare subsystem dependencies.
    addRequirements(subsystem);
  }

  // Called when the command is initially scheduled.
  @Override
  public void initialize() {
    m_subsystem.resetEncoders();
  }

  // Called every time the scheduler runs while the command is scheduled.
  @Override
  public void execute() {
    if(isDeteched){
      m_subsystem.arcadeDrive(m_PIDController.calculate(m_subsystem.m_AHRS.getRoll()),m_PIDController.calculate(m_subsystem.m_AHRS.getPitch()));
    }
  }

  // Called once the command ends or is interrupted.
  @Override
  public void end(boolean interrupted) {}

  // Returns true when the command should end.
  @Override
  public boolean isFinished() {
    return (m_subsystem.getAverageDistanceInch() >= m_distance);
  }
}
